apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.usherbrooke.deliverresto"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled false
        }
    }
    aaptOptions {
        cruncherEnabled = false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}
greendao {
    schemaVersion 6
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    compile fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible,GradleCompatible
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:cardview-v7:26.+'
    compile 'com.android.support:support-v4:26.+'
    compile 'com.wdullaer:swipeactionadapter:2.0.0'
    testCompile 'junit:junit:4.12'
    compile 'org.greenrobot:greendao:3.2.2' // add library
    testCompile 'org.mockito:mockito-core:2.0.5-beta'
    androidTestCompile 'com.android.support:support-annotations:24.0.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
}

android{
    lintOptions{
        xmlReport true
        htmlReport true
        abortOnError false
    }

}

apply plugin: 'findbugs'

task findbugs(type: FindBugs) {
    description 'Run findbugs'
    group 'verification'
    classes = files("$project.buildDir/intermediates/classes")
    source 'src'
    classpath = files()
    effort 'max'
    reportLevel = "high"
    reports {
        xml.enabled = false
        html.enabled = true
    }
    ignoreFailures = true
}

apply plugin: 'pmd'

task pmd(type: Pmd) {
    description 'Run PMD'
    group 'verification'
    source 'src'
    include '*/.java'
    exclude '*/gen/*'
    reports {
        xml.enabled = false
        html.enabled = true
    }
    ignoreFailures = true
}
